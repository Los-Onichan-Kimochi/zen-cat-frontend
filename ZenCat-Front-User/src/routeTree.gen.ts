/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PreciosImport } from './routes/precios'
import { Route as MembresiaImport } from './routes/membresia'
import { Route as ContactoImport } from './routes/contacto'
import { Route as ComunidadesImport } from './routes/comunidades'
import { Route as ComoFuncionaImport } from './routes/como-funciona'
import { Route as SignupRouteImport } from './routes/signup/route'
import { Route as LoginRouteImport } from './routes/login/route'
import { Route as HomeRouteImport } from './routes/home/route'
import { Route as ForgotRouteImport } from './routes/forgot/route'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const PreciosRoute = PreciosImport.update({
  id: '/precios',
  path: '/precios',
  getParentRoute: () => rootRoute,
} as any)

const MembresiaRoute = MembresiaImport.update({
  id: '/membresia',
  path: '/membresia',
  getParentRoute: () => rootRoute,
} as any)

const ContactoRoute = ContactoImport.update({
  id: '/contacto',
  path: '/contacto',
  getParentRoute: () => rootRoute,
} as any)

const ComunidadesRoute = ComunidadesImport.update({
  id: '/comunidades',
  path: '/comunidades',
  getParentRoute: () => rootRoute,
} as any)

const ComoFuncionaRoute = ComoFuncionaImport.update({
  id: '/como-funciona',
  path: '/como-funciona',
  getParentRoute: () => rootRoute,
} as any)

const SignupRouteRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRouteRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeRouteRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const ForgotRouteRoute = ForgotRouteImport.update({
  id: '/forgot',
  path: '/forgot',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/forgot': {
      id: '/forgot'
      path: '/forgot'
      fullPath: '/forgot'
      preLoaderRoute: typeof ForgotRouteImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRoute
    }
    '/como-funciona': {
      id: '/como-funciona'
      path: '/como-funciona'
      fullPath: '/como-funciona'
      preLoaderRoute: typeof ComoFuncionaImport
      parentRoute: typeof rootRoute
    }
    '/comunidades': {
      id: '/comunidades'
      path: '/comunidades'
      fullPath: '/comunidades'
      preLoaderRoute: typeof ComunidadesImport
      parentRoute: typeof rootRoute
    }
    '/contacto': {
      id: '/contacto'
      path: '/contacto'
      fullPath: '/contacto'
      preLoaderRoute: typeof ContactoImport
      parentRoute: typeof rootRoute
    }
    '/membresia': {
      id: '/membresia'
      path: '/membresia'
      fullPath: '/membresia'
      preLoaderRoute: typeof MembresiaImport
      parentRoute: typeof rootRoute
    }
    '/precios': {
      id: '/precios'
      path: '/precios'
      fullPath: '/precios'
      preLoaderRoute: typeof PreciosImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgot': typeof ForgotRouteRoute
  '/home': typeof HomeRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '/como-funciona': typeof ComoFuncionaRoute
  '/comunidades': typeof ComunidadesRoute
  '/contacto': typeof ContactoRoute
  '/membresia': typeof MembresiaRoute
  '/precios': typeof PreciosRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot': typeof ForgotRouteRoute
  '/home': typeof HomeRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '/como-funciona': typeof ComoFuncionaRoute
  '/comunidades': typeof ComunidadesRoute
  '/contacto': typeof ContactoRoute
  '/membresia': typeof MembresiaRoute
  '/precios': typeof PreciosRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/forgot': typeof ForgotRouteRoute
  '/home': typeof HomeRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '/como-funciona': typeof ComoFuncionaRoute
  '/comunidades': typeof ComunidadesRoute
  '/contacto': typeof ContactoRoute
  '/membresia': typeof MembresiaRoute
  '/precios': typeof PreciosRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot'
    | '/home'
    | '/login'
    | '/signup'
    | '/como-funciona'
    | '/comunidades'
    | '/contacto'
    | '/membresia'
    | '/precios'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot'
    | '/home'
    | '/login'
    | '/signup'
    | '/como-funciona'
    | '/comunidades'
    | '/contacto'
    | '/membresia'
    | '/precios'
  id:
    | '__root__'
    | '/'
    | '/forgot'
    | '/home'
    | '/login'
    | '/signup'
    | '/como-funciona'
    | '/comunidades'
    | '/contacto'
    | '/membresia'
    | '/precios'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ForgotRouteRoute: typeof ForgotRouteRoute
  HomeRouteRoute: typeof HomeRouteRoute
  LoginRouteRoute: typeof LoginRouteRoute
  SignupRouteRoute: typeof SignupRouteRoute
  ComoFuncionaRoute: typeof ComoFuncionaRoute
  ComunidadesRoute: typeof ComunidadesRoute
  ContactoRoute: typeof ContactoRoute
  MembresiaRoute: typeof MembresiaRoute
  PreciosRoute: typeof PreciosRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ForgotRouteRoute: ForgotRouteRoute,
  HomeRouteRoute: HomeRouteRoute,
  LoginRouteRoute: LoginRouteRoute,
  SignupRouteRoute: SignupRouteRoute,
  ComoFuncionaRoute: ComoFuncionaRoute,
  ComunidadesRoute: ComunidadesRoute,
  ContactoRoute: ContactoRoute,
  MembresiaRoute: MembresiaRoute,
  PreciosRoute: PreciosRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/forgot",
        "/home",
        "/login",
        "/signup",
        "/como-funciona",
        "/comunidades",
        "/contacto",
        "/membresia",
        "/precios"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/forgot": {
      "filePath": "forgot/route.tsx"
    },
    "/home": {
      "filePath": "home/route.tsx"
    },
    "/login": {
      "filePath": "login/route.tsx"
    },
    "/signup": {
      "filePath": "signup/route.tsx"
    },
    "/como-funciona": {
      "filePath": "como-funciona.tsx"
    },
    "/comunidades": {
      "filePath": "comunidades.tsx"
    },
    "/contacto": {
      "filePath": "contacto.tsx"
    },
    "/membresia": {
      "filePath": "membresia.tsx"
    },
    "/precios": {
      "filePath": "precios.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
