/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as NotFoundPageImport } from './routes/NotFoundPage'
import { Route as SesionesRouteImport } from './routes/sesiones/route'
import { Route as ServiciosRouteImport } from './routes/servicios/route'
import { Route as RolesPermisosRouteImport } from './routes/roles-permisos/route'
import { Route as ReportesRouteImport } from './routes/reportes/route'
import { Route as PlanesMembresiaRouteImport } from './routes/planes-membresia/route'
import { Route as LogErroresRouteImport } from './routes/log-errores/route'
import { Route as LocalesRouteImport } from './routes/locales/route'
import { Route as ComunidadesRouteImport } from './routes/comunidades/route'
import { Route as AuditoriaRouteImport } from './routes/auditoria/route'
import { Route as IndexImport } from './routes/index'
import { Route as UsuariosIndexImport } from './routes/usuarios/index'
import { Route as ProfesionalesIndexImport } from './routes/profesionales/index'
import { Route as UsuariosVermembresiaImport } from './routes/usuarios/ver_membresia'
import { Route as UsuariosEditarImport } from './routes/usuarios/editar'
import { Route as UsuariosAgregarImport } from './routes/usuarios/agregar'
import { Route as ProfesionalesVerImport } from './routes/profesionales/ver'
import { Route as ProfesionalesNuevoImport } from './routes/profesionales/nuevo'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const NotFoundPageRoute = NotFoundPageImport.update({
  id: '/NotFoundPage',
  path: '/NotFoundPage',
  getParentRoute: () => rootRoute,
} as any)

const SesionesRouteRoute = SesionesRouteImport.update({
  id: '/sesiones',
  path: '/sesiones',
  getParentRoute: () => rootRoute,
} as any)

const ServiciosRouteRoute = ServiciosRouteImport.update({
  id: '/servicios',
  path: '/servicios',
  getParentRoute: () => rootRoute,
} as any)

const RolesPermisosRouteRoute = RolesPermisosRouteImport.update({
  id: '/roles-permisos',
  path: '/roles-permisos',
  getParentRoute: () => rootRoute,
} as any)

const ReportesRouteRoute = ReportesRouteImport.update({
  id: '/reportes',
  path: '/reportes',
  getParentRoute: () => rootRoute,
} as any)

const PlanesMembresiaRouteRoute = PlanesMembresiaRouteImport.update({
  id: '/planes-membresia',
  path: '/planes-membresia',
  getParentRoute: () => rootRoute,
} as any)

const LogErroresRouteRoute = LogErroresRouteImport.update({
  id: '/log-errores',
  path: '/log-errores',
  getParentRoute: () => rootRoute,
} as any)

const LocalesRouteRoute = LocalesRouteImport.update({
  id: '/locales',
  path: '/locales',
  getParentRoute: () => rootRoute,
} as any)

const ComunidadesRouteRoute = ComunidadesRouteImport.update({
  id: '/comunidades',
  path: '/comunidades',
  getParentRoute: () => rootRoute,
} as any)

const AuditoriaRouteRoute = AuditoriaRouteImport.update({
  id: '/auditoria',
  path: '/auditoria',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsuariosIndexRoute = UsuariosIndexImport.update({
  id: '/usuarios/',
  path: '/usuarios/',
  getParentRoute: () => rootRoute,
} as any)

const ProfesionalesIndexRoute = ProfesionalesIndexImport.update({
  id: '/profesionales/',
  path: '/profesionales/',
  getParentRoute: () => rootRoute,
} as any)

const UsuariosVermembresiaRoute = UsuariosVermembresiaImport.update({
  id: '/usuarios/ver_membresia',
  path: '/usuarios/ver_membresia',
  getParentRoute: () => rootRoute,
} as any)

const UsuariosEditarRoute = UsuariosEditarImport.update({
  id: '/usuarios/editar',
  path: '/usuarios/editar',
  getParentRoute: () => rootRoute,
} as any)

const UsuariosAgregarRoute = UsuariosAgregarImport.update({
  id: '/usuarios/agregar',
  path: '/usuarios/agregar',
  getParentRoute: () => rootRoute,
} as any)

const ProfesionalesVerRoute = ProfesionalesVerImport.update({
  id: '/profesionales/ver',
  path: '/profesionales/ver',
  getParentRoute: () => rootRoute,
} as any)

const ProfesionalesNuevoRoute = ProfesionalesNuevoImport.update({
  id: '/profesionales/nuevo',
  path: '/profesionales/nuevo',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auditoria': {
      id: '/auditoria'
      path: '/auditoria'
      fullPath: '/auditoria'
      preLoaderRoute: typeof AuditoriaRouteImport
      parentRoute: typeof rootRoute
    }
    '/comunidades': {
      id: '/comunidades'
      path: '/comunidades'
      fullPath: '/comunidades'
      preLoaderRoute: typeof ComunidadesRouteImport
      parentRoute: typeof rootRoute
    }
    '/locales': {
      id: '/locales'
      path: '/locales'
      fullPath: '/locales'
      preLoaderRoute: typeof LocalesRouteImport
      parentRoute: typeof rootRoute
    }
    '/log-errores': {
      id: '/log-errores'
      path: '/log-errores'
      fullPath: '/log-errores'
      preLoaderRoute: typeof LogErroresRouteImport
      parentRoute: typeof rootRoute
    }
    '/planes-membresia': {
      id: '/planes-membresia'
      path: '/planes-membresia'
      fullPath: '/planes-membresia'
      preLoaderRoute: typeof PlanesMembresiaRouteImport
      parentRoute: typeof rootRoute
    }
    '/reportes': {
      id: '/reportes'
      path: '/reportes'
      fullPath: '/reportes'
      preLoaderRoute: typeof ReportesRouteImport
      parentRoute: typeof rootRoute
    }
    '/roles-permisos': {
      id: '/roles-permisos'
      path: '/roles-permisos'
      fullPath: '/roles-permisos'
      preLoaderRoute: typeof RolesPermisosRouteImport
      parentRoute: typeof rootRoute
    }
    '/servicios': {
      id: '/servicios'
      path: '/servicios'
      fullPath: '/servicios'
      preLoaderRoute: typeof ServiciosRouteImport
      parentRoute: typeof rootRoute
    }
    '/sesiones': {
      id: '/sesiones'
      path: '/sesiones'
      fullPath: '/sesiones'
      preLoaderRoute: typeof SesionesRouteImport
      parentRoute: typeof rootRoute
    }
    '/NotFoundPage': {
      id: '/NotFoundPage'
      path: '/NotFoundPage'
      fullPath: '/NotFoundPage'
      preLoaderRoute: typeof NotFoundPageImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profesionales/nuevo': {
      id: '/profesionales/nuevo'
      path: '/profesionales/nuevo'
      fullPath: '/profesionales/nuevo'
      preLoaderRoute: typeof ProfesionalesNuevoImport
      parentRoute: typeof rootRoute
    }
    '/profesionales/ver': {
      id: '/profesionales/ver'
      path: '/profesionales/ver'
      fullPath: '/profesionales/ver'
      preLoaderRoute: typeof ProfesionalesVerImport
      parentRoute: typeof rootRoute
    }
    '/usuarios/agregar': {
      id: '/usuarios/agregar'
      path: '/usuarios/agregar'
      fullPath: '/usuarios/agregar'
      preLoaderRoute: typeof UsuariosAgregarImport
      parentRoute: typeof rootRoute
    }
    '/usuarios/editar': {
      id: '/usuarios/editar'
      path: '/usuarios/editar'
      fullPath: '/usuarios/editar'
      preLoaderRoute: typeof UsuariosEditarImport
      parentRoute: typeof rootRoute
    }
    '/usuarios/ver_membresia': {
      id: '/usuarios/ver_membresia'
      path: '/usuarios/ver_membresia'
      fullPath: '/usuarios/ver_membresia'
      preLoaderRoute: typeof UsuariosVermembresiaImport
      parentRoute: typeof rootRoute
    }
    '/profesionales/': {
      id: '/profesionales/'
      path: '/profesionales'
      fullPath: '/profesionales'
      preLoaderRoute: typeof ProfesionalesIndexImport
      parentRoute: typeof rootRoute
    }
    '/usuarios/': {
      id: '/usuarios/'
      path: '/usuarios'
      fullPath: '/usuarios'
      preLoaderRoute: typeof UsuariosIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auditoria': typeof AuditoriaRouteRoute
  '/comunidades': typeof ComunidadesRouteRoute
  '/locales': typeof LocalesRouteRoute
  '/log-errores': typeof LogErroresRouteRoute
  '/planes-membresia': typeof PlanesMembresiaRouteRoute
  '/reportes': typeof ReportesRouteRoute
  '/roles-permisos': typeof RolesPermisosRouteRoute
  '/servicios': typeof ServiciosRouteRoute
  '/sesiones': typeof SesionesRouteRoute
  '/NotFoundPage': typeof NotFoundPageRoute
  '/login': typeof LoginRoute
  '/profesionales/nuevo': typeof ProfesionalesNuevoRoute
  '/profesionales/ver': typeof ProfesionalesVerRoute
  '/usuarios/agregar': typeof UsuariosAgregarRoute
  '/usuarios/editar': typeof UsuariosEditarRoute
  '/usuarios/ver_membresia': typeof UsuariosVermembresiaRoute
  '/profesionales': typeof ProfesionalesIndexRoute
  '/usuarios': typeof UsuariosIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auditoria': typeof AuditoriaRouteRoute
  '/comunidades': typeof ComunidadesRouteRoute
  '/locales': typeof LocalesRouteRoute
  '/log-errores': typeof LogErroresRouteRoute
  '/planes-membresia': typeof PlanesMembresiaRouteRoute
  '/reportes': typeof ReportesRouteRoute
  '/roles-permisos': typeof RolesPermisosRouteRoute
  '/servicios': typeof ServiciosRouteRoute
  '/sesiones': typeof SesionesRouteRoute
  '/NotFoundPage': typeof NotFoundPageRoute
  '/login': typeof LoginRoute
  '/profesionales/nuevo': typeof ProfesionalesNuevoRoute
  '/profesionales/ver': typeof ProfesionalesVerRoute
  '/usuarios/agregar': typeof UsuariosAgregarRoute
  '/usuarios/editar': typeof UsuariosEditarRoute
  '/usuarios/ver_membresia': typeof UsuariosVermembresiaRoute
  '/profesionales': typeof ProfesionalesIndexRoute
  '/usuarios': typeof UsuariosIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auditoria': typeof AuditoriaRouteRoute
  '/comunidades': typeof ComunidadesRouteRoute
  '/locales': typeof LocalesRouteRoute
  '/log-errores': typeof LogErroresRouteRoute
  '/planes-membresia': typeof PlanesMembresiaRouteRoute
  '/reportes': typeof ReportesRouteRoute
  '/roles-permisos': typeof RolesPermisosRouteRoute
  '/servicios': typeof ServiciosRouteRoute
  '/sesiones': typeof SesionesRouteRoute
  '/NotFoundPage': typeof NotFoundPageRoute
  '/login': typeof LoginRoute
  '/profesionales/nuevo': typeof ProfesionalesNuevoRoute
  '/profesionales/ver': typeof ProfesionalesVerRoute
  '/usuarios/agregar': typeof UsuariosAgregarRoute
  '/usuarios/editar': typeof UsuariosEditarRoute
  '/usuarios/ver_membresia': typeof UsuariosVermembresiaRoute
  '/profesionales/': typeof ProfesionalesIndexRoute
  '/usuarios/': typeof UsuariosIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auditoria'
    | '/comunidades'
    | '/locales'
    | '/log-errores'
    | '/planes-membresia'
    | '/reportes'
    | '/roles-permisos'
    | '/servicios'
    | '/sesiones'
    | '/NotFoundPage'
    | '/login'
    | '/profesionales/nuevo'
    | '/profesionales/ver'
    | '/usuarios/agregar'
    | '/usuarios/editar'
    | '/usuarios/ver_membresia'
    | '/profesionales'
    | '/usuarios'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auditoria'
    | '/comunidades'
    | '/locales'
    | '/log-errores'
    | '/planes-membresia'
    | '/reportes'
    | '/roles-permisos'
    | '/servicios'
    | '/sesiones'
    | '/NotFoundPage'
    | '/login'
    | '/profesionales/nuevo'
    | '/profesionales/ver'
    | '/usuarios/agregar'
    | '/usuarios/editar'
    | '/usuarios/ver_membresia'
    | '/profesionales'
    | '/usuarios'
  id:
    | '__root__'
    | '/'
    | '/auditoria'
    | '/comunidades'
    | '/locales'
    | '/log-errores'
    | '/planes-membresia'
    | '/reportes'
    | '/roles-permisos'
    | '/servicios'
    | '/sesiones'
    | '/NotFoundPage'
    | '/login'
    | '/profesionales/nuevo'
    | '/profesionales/ver'
    | '/usuarios/agregar'
    | '/usuarios/editar'
    | '/usuarios/ver_membresia'
    | '/profesionales/'
    | '/usuarios/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuditoriaRouteRoute: typeof AuditoriaRouteRoute
  ComunidadesRouteRoute: typeof ComunidadesRouteRoute
  LocalesRouteRoute: typeof LocalesRouteRoute
  LogErroresRouteRoute: typeof LogErroresRouteRoute
  PlanesMembresiaRouteRoute: typeof PlanesMembresiaRouteRoute
  ReportesRouteRoute: typeof ReportesRouteRoute
  RolesPermisosRouteRoute: typeof RolesPermisosRouteRoute
  ServiciosRouteRoute: typeof ServiciosRouteRoute
  SesionesRouteRoute: typeof SesionesRouteRoute
  NotFoundPageRoute: typeof NotFoundPageRoute
  LoginRoute: typeof LoginRoute
  ProfesionalesNuevoRoute: typeof ProfesionalesNuevoRoute
  ProfesionalesVerRoute: typeof ProfesionalesVerRoute
  UsuariosAgregarRoute: typeof UsuariosAgregarRoute
  UsuariosEditarRoute: typeof UsuariosEditarRoute
  UsuariosVermembresiaRoute: typeof UsuariosVermembresiaRoute
  ProfesionalesIndexRoute: typeof ProfesionalesIndexRoute
  UsuariosIndexRoute: typeof UsuariosIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuditoriaRouteRoute: AuditoriaRouteRoute,
  ComunidadesRouteRoute: ComunidadesRouteRoute,
  LocalesRouteRoute: LocalesRouteRoute,
  LogErroresRouteRoute: LogErroresRouteRoute,
  PlanesMembresiaRouteRoute: PlanesMembresiaRouteRoute,
  ReportesRouteRoute: ReportesRouteRoute,
  RolesPermisosRouteRoute: RolesPermisosRouteRoute,
  ServiciosRouteRoute: ServiciosRouteRoute,
  SesionesRouteRoute: SesionesRouteRoute,
  NotFoundPageRoute: NotFoundPageRoute,
  LoginRoute: LoginRoute,
  ProfesionalesNuevoRoute: ProfesionalesNuevoRoute,
  ProfesionalesVerRoute: ProfesionalesVerRoute,
  UsuariosAgregarRoute: UsuariosAgregarRoute,
  UsuariosEditarRoute: UsuariosEditarRoute,
  UsuariosVermembresiaRoute: UsuariosVermembresiaRoute,
  ProfesionalesIndexRoute: ProfesionalesIndexRoute,
  UsuariosIndexRoute: UsuariosIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auditoria",
        "/comunidades",
        "/locales",
        "/log-errores",
        "/planes-membresia",
        "/reportes",
        "/roles-permisos",
        "/servicios",
        "/sesiones",
        "/NotFoundPage",
        "/login",
        "/profesionales/nuevo",
        "/profesionales/ver",
        "/usuarios/agregar",
        "/usuarios/editar",
        "/usuarios/ver_membresia",
        "/profesionales/",
        "/usuarios/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auditoria": {
      "filePath": "auditoria/route.tsx"
    },
    "/comunidades": {
      "filePath": "comunidades/route.tsx"
    },
    "/locales": {
      "filePath": "locales/route.tsx"
    },
    "/log-errores": {
      "filePath": "log-errores/route.tsx"
    },
    "/planes-membresia": {
      "filePath": "planes-membresia/route.tsx"
    },
    "/reportes": {
      "filePath": "reportes/route.tsx"
    },
    "/roles-permisos": {
      "filePath": "roles-permisos/route.tsx"
    },
    "/servicios": {
      "filePath": "servicios/route.tsx"
    },
    "/sesiones": {
      "filePath": "sesiones/route.tsx"
    },
    "/NotFoundPage": {
      "filePath": "NotFoundPage.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profesionales/nuevo": {
      "filePath": "profesionales/nuevo.tsx"
    },
    "/profesionales/ver": {
      "filePath": "profesionales/ver.tsx"
    },
    "/usuarios/agregar": {
      "filePath": "usuarios/agregar.tsx"
    },
    "/usuarios/editar": {
      "filePath": "usuarios/editar.tsx"
    },
    "/usuarios/ver_membresia": {
      "filePath": "usuarios/ver_membresia.tsx"
    },
    "/profesionales/": {
      "filePath": "profesionales/index.tsx"
    },
    "/usuarios/": {
      "filePath": "usuarios/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
